/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package chronica.ui.attendee;

import chronica.model.user.User;
import chronica.model.event.Event;
import chronica.model.event.EventDirectory;
import chronica.model.role.RoleDirectory;
import chronica.ui.customer.TaskPanel;
import java.awt.CardLayout;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Gooqe
 */
public class AttendeePanel extends javax.swing.JPanel {

    JPanel attendeePanel;
    RoleDirectory roleDirectory;
    EventDirectory eventDirectory;
    User attendee;

    /**
     * Creates new form AttendeePanel
     *
     * @param customerPanel
     * @param attendee
     * @param roleDirectory
     * @param eventDirectory
     */
    public AttendeePanel(JPanel attendeePanel, User attendee, RoleDirectory roleDirectory, EventDirectory eventDirectory) {
        initComponents();
        this.attendeePanel = attendeePanel;
        this.roleDirectory = roleDirectory;
        this.eventDirectory = eventDirectory;
        this.attendee = attendee;
        populateTable();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        tblEvents = new javax.swing.JTable();
        jLabel1 = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        tblOrderHistory = new javax.swing.JTable();
        jLabel2 = new javax.swing.JLabel();
        btnFeedbacck = new javax.swing.JButton();
        btnPlaceTicket = new javax.swing.JButton();

        tblEvents.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null}
            },
            new String [] {
                "Name", "Host", "Location", "Date", "Availability", "Ticket Fare"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(tblEvents);

        jLabel1.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        jLabel1.setText("Order History");

        tblOrderHistory.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Name", "Host", "Location", "Date"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane2.setViewportView(tblOrderHistory);

        jLabel2.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        jLabel2.setText("Book an Event ! ");

        btnFeedbacck.setText("Feedback");
        btnFeedbacck.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnFeedbacckActionPerformed(evt);
            }
        });

        btnPlaceTicket.setText("Buy now");
        btnPlaceTicket.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnPlaceTicketActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(37, 37, 37)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 651, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 22, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(btnFeedbacck, javax.swing.GroupLayout.PREFERRED_SIZE, 118, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(193, 193, 193)))
                .addGap(16, 16, 16))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(284, 284, 284)
                .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 175, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 175, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(127, 127, 127))
            .addGroup(layout.createSequentialGroup()
                .addGap(315, 315, 315)
                .addComponent(btnPlaceTicket, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(47, 47, 47)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(btnFeedbacck, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 591, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(btnPlaceTicket, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(108, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void btnFeedbacckActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnFeedbacckActionPerformed
        // TODO add your handling code here:

        int selectedRowIndex = tblOrderHistory.getSelectedRow();
        if (selectedRowIndex < 0) {
            JOptionPane.showMessageDialog(this, "Please a select a Event to give Feedback !", "Warning", JOptionPane.WARNING_MESSAGE);

            return;
        }
        Event e = (Event) tblEvents.getValueAt(selectedRowIndex, 0);
        AttendeeFeedbackPanel panel = new AttendeeFeedbackPanel(attendeePanel, attendee, roleDirectory, eventDirectory, e);
        attendeePanel.add("AttendeeFeedbackPanel", panel);
        CardLayout layout = (CardLayout) attendeePanel.getLayout();
        layout.next(attendeePanel);

    }//GEN-LAST:event_btnFeedbacckActionPerformed

    private void btnPlaceTicketActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnPlaceTicketActionPerformed
        // TODO add your handling code here:
        int selectedRowIndex = tblEvents.getSelectedRow();
        if (selectedRowIndex < 0) {
            JOptionPane.showMessageDialog(this, "Please a select a Event to place tickets !", "Warning", JOptionPane.WARNING_MESSAGE);

            return;
        }
        Event e = (Event) tblEvents.getValueAt(selectedRowIndex, 0);
        e.registerUser(attendee);
        JOptionPane.showMessageDialog(this, "Ticket Booked Successfully !" + attendee.getUsername() + " !", "Information", JOptionPane.INFORMATION_MESSAGE);
        populateTable();


    }//GEN-LAST:event_btnPlaceTicketActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnFeedbacck;
    private javax.swing.JButton btnPlaceTicket;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTable tblEvents;
    private javax.swing.JTable tblOrderHistory;
    // End of variables declaration//GEN-END:variables
    private void populateTable() {
        DefaultTableModel model = (DefaultTableModel) tblEvents.getModel();
        model.setRowCount(0);

        for (Event e : eventDirectory.getEvents()) {
            Object row[] = new Object[6];

            row[0] = e;
            row[1] = e.getCreatedBy();
            row[2] = e.getLocation();
            row[3] = e.getDate();
            row[4] = e.getAvailableTicket();
            row[5] = e.getTicketPrice();
            model.addRow(row);

        }

        DefaultTableModel model1 = (DefaultTableModel) tblOrderHistory.getModel();
        model1.setRowCount(0);

        for (Event e : eventDirectory.getEventsRegisteredByUser(attendee)) {
            Object row[] = new Object[5];

            row[0] = e;
            row[1] = e.getCreatedBy();
            row[2] = e.getLocation();
            row[3] = e.getDate();
            row[4] = e.getTicketPrice();
            model1.addRow(row);

        }

    }
}
