/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package chronica.ui.marketingmanagement;

import chronica.model.event.Event;
import chronica.model.event.EventDirectory;
import chronica.model.role.RoleDirectory;
import chronica.model.task.Task;
import chronica.model.task.TaskDirectory;
import chronica.model.user.User;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author kaavy
 */
public class MarketingPanel extends javax.swing.JPanel {
    JPanel MarketingPanel;
    RoleDirectory roleDirectory;
    TaskDirectory taskDirectory;
    EventDirectory eventDirectory;
    User marketingUser;

    /**
     * Creates new form MarketingPanel
     */
    public MarketingPanel(JPanel MarketingPanel, User marketingUser, RoleDirectory roleDirectory, TaskDirectory taskDirectory, EventDirectory eventDirectory) {
        initComponents();
        this.MarketingPanel = MarketingPanel;
        this.marketingUser = marketingUser;
        this.roleDirectory = roleDirectory;
        this.taskDirectory = taskDirectory;
        this.eventDirectory = eventDirectory;
        populateTable();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        lblTitle2 = new javax.swing.JLabel();
        ScrollPane2 = new javax.swing.JScrollPane();
        tblMarketHistory = new javax.swing.JTable();
        lblTitle1 = new javax.swing.JLabel();
        ScrollPane1 = new javax.swing.JScrollPane();
        tblMarket = new javax.swing.JTable();
        btnAssign = new javax.swing.JButton();
        btnRemoveTask = new javax.swing.JButton();
        jLabel12 = new javax.swing.JLabel();

        lblTitle2.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        lblTitle2.setText("Marketing History");

        tblMarketHistory.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null}
            },
            new String [] {
                "Event ID", "Task", "Date", "Budget", "Created By", "Status"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        ScrollPane2.setViewportView(tblMarketHistory);

        lblTitle1.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        lblTitle1.setText("Marketing Details");

        tblMarket.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null}
            },
            new String [] {
                "Event ID", "Task", "Date", "Budget", "Created By", "Status"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        ScrollPane1.setViewportView(tblMarket);

        btnAssign.setText("Assign to Me");
        btnAssign.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAssignActionPerformed(evt);
            }
        });

        btnRemoveTask.setText("Remove");
        btnRemoveTask.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnRemoveTaskActionPerformed(evt);
            }
        });

        jLabel12.setFont(new java.awt.Font("Segoe UI", 1, 24)); // NOI18N
        jLabel12.setText("Marketing Dashboard");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(188, 188, 188)
                .addComponent(lblTitle1, javax.swing.GroupLayout.PREFERRED_SIZE, 175, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(30, 30, 30)
                .addComponent(jLabel12)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(lblTitle2, javax.swing.GroupLayout.PREFERRED_SIZE, 175, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(108, 108, 108))
            .addGroup(layout.createSequentialGroup()
                .addGap(64, 64, 64)
                .addComponent(ScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(35, 35, 35)
                .addComponent(ScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 395, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(layout.createSequentialGroup()
                .addGap(217, 217, 217)
                .addComponent(btnAssign)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(btnRemoveTask)
                .addGap(166, 166, 166))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap(58, Short.MAX_VALUE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(lblTitle1, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(lblTitle2, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(27, 27, 27)
                        .addComponent(jLabel12, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(ScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 294, Short.MAX_VALUE)
                    .addComponent(ScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnRemoveTask)
                    .addComponent(btnAssign))
                .addGap(67, 67, 67))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void btnAssignActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAssignActionPerformed
        // TODO add your handling code here:
        int selectedRowIndex = tblMarket.getSelectedRow();
        if (selectedRowIndex < 0) {
            JOptionPane.showMessageDialog(this, "Please select a task to assign.", "Warning", JOptionPane.WARNING_MESSAGE);
            return;
        }

        Task task = (Task) tblMarket.getValueAt(selectedRowIndex, 0);
        task.setStatus(true);
        task.setAssignedto(marketingUser);
        JOptionPane.showMessageDialog(this, "Task assigned to " + marketingUser.getUsername() + ".", "Information", JOptionPane.INFORMATION_MESSAGE);
        populateTable();

        System.out.println(task.getAssignedby() + "" + task.getAssignedto());

    }//GEN-LAST:event_btnAssignActionPerformed

    private void btnRemoveTaskActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnRemoveTaskActionPerformed
        // TODO add your handling code here:
        int selectedrow = tblMarketHistory.getSelectedRow();
        if (selectedrow >= 0) {
            Task selectedTask = (Task) tblMarketHistory.getValueAt(selectedrow, 0);

           selectedTask.setStatus(false);
           selectedTask.setAssignedto(null);
            JOptionPane.showMessageDialog(this, "Task Deleted.", "Information", JOptionPane.INFORMATION_MESSAGE);
            populateTable();

        } else {
            JOptionPane.showMessageDialog(this, "Please a select a Task to delete from the list", "Warning", JOptionPane.WARNING_MESSAGE);
        }
    }//GEN-LAST:event_btnRemoveTaskActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JScrollPane ScrollPane1;
    private javax.swing.JScrollPane ScrollPane2;
    private javax.swing.JButton btnAssign;
    private javax.swing.JButton btnRemoveTask;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel lblTitle1;
    private javax.swing.JLabel lblTitle2;
    private javax.swing.JTable tblMarket;
    private javax.swing.JTable tblMarketHistory;
    // End of variables declaration//GEN-END:variables

    private void populateTable() {
        DefaultTableModel model = (DefaultTableModel) tblMarket.getModel();
        model.setRowCount(0);

        for (Event e : eventDirectory.getEvents()) {
            TaskDirectory td = e.getTaskDirectory();
            for (Task task : td.getAllTasks()) {
                if (task.getRole().getName().equalsIgnoreCase("Marketing") && task.isStatus() == false) {
                    Object[] row = new Object[6];
                    row[0] = e.getEventId();
                    row[1] = task;
                    row[2] = e.getDate();
                    row[3] = task.getCost();
                    row[4] = task.getAssignedby().getUsername();
                    row[5] = task.isStatus() ? "Completed" : "Pending";
                    model.addRow(row);

                }
            }

            DefaultTableModel model1 = (DefaultTableModel) tblMarketHistory.getModel();
            model1.setRowCount(0);

            for (Event ev : eventDirectory.getEvents()) {
                for (Task task : ev.getTaskDirectory().getTaskedbyAssignedto(marketingUser)) {
                    if (task == null) {

                    } else {
                        if (task.getRole().getName().equalsIgnoreCase("Maketing")) {
                            Object[] row = new Object[6];
                        row[0] = e.getEventId();
                        row[1] = task;
                        row[2] = e.getDate();
                        row[3] = task.getCost();
                        row[4] = task.getAssignedby().getUsername();
                        row[5] = task.isStatus() ? "Completed" : "Pending";
                        model.addRow(row);
                        }

                    }
                }
            }
        }
    }
}
