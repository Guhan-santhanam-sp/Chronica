/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package chronica.ui.admin;

import chronica.model.event.Event;
import chronica.model.event.EventDirectory;
import chronica.model.role.RoleDirectory;
import chronica.model.task.Task;
import chronica.model.user.User;
import chronica.model.user.UserDirectory;
import java.awt.CardLayout;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Gooqe
 */
public class AdminProcessEventPanel extends javax.swing.JPanel {

    JPanel adminPanel;
    User admin;
    EventDirectory eventDirectory;
    RoleDirectory roleDirectory;
    UserDirectory userDirectory;
    Event selectedEvent;

    /**
     * Creates new form AdminProcessEventPanel
     *
     * @param adminPanel
     * @param admin
     * @param eventDirectory
     * @param selectedEvent
     * @param userDirectory
     * @param roleDirectory
     */
    public AdminProcessEventPanel(JPanel adminPanel, User admin, EventDirectory eventDirectory, UserDirectory userDirectory, RoleDirectory roleDirectory, Event selectedEvent) {
        initComponents();
        this.adminPanel = adminPanel;
        this.admin = admin;
        this.eventDirectory = eventDirectory;
        this.userDirectory = userDirectory;
        this.roleDirectory = roleDirectory;
        this.selectedEvent = selectedEvent;
        populateTable();

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblTask = new javax.swing.JTable();
        btnApprove = new javax.swing.JButton();
        btnback = new javax.swing.JButton();

        jLabel1.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jLabel1.setText("Process Event");

        tblTask.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null}
            },
            new String [] {
                "Vendor Name", "Description", "Role", "Cost", "Status", "Live"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(tblTask);

        btnApprove.setText("Approve Event");
        btnApprove.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnApproveActionPerformed(evt);
            }
        });

        btnback.setText("<");
        btnback.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnbackActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(425, 425, 425)
                        .addComponent(btnApprove, javax.swing.GroupLayout.PREFERRED_SIZE, 134, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(62, 62, 62)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(btnback, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(400, 400, 400)
                                .addComponent(jLabel1))
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 819, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap(296, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(61, 61, 61)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel1)
                    .addComponent(btnback))
                .addGap(38, 38, 38)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 501, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(btnApprove, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(276, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void btnbackActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnbackActionPerformed
        // TODO add your handling code here:
        adminPanel.remove(this);
        CardLayout layout = (CardLayout) adminPanel.getLayout();
        layout.previous(adminPanel);
    }//GEN-LAST:event_btnbackActionPerformed

    private void btnApproveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnApproveActionPerformed
        // TODO add your handling code here:
        if (selectedEvent.getLive() == false) {
            if (selectedEvent.isAllTaskReady()) {
                selectedEvent.setLive(true);

                JOptionPane.showMessageDialog(this, "Event is now Live !", "Information", JOptionPane.INFORMATION_MESSAGE);
                populateTable();

            } else {
                JOptionPane.showMessageDialog(this, "All Tasks Should be Processed before Pushing it to Live !", "Warning", JOptionPane.WARNING_MESSAGE);
            }

        } else {
            JOptionPane.showMessageDialog(this, "The Event is Already Live ! !", "Warning", JOptionPane.WARNING_MESSAGE);
        }

    }//GEN-LAST:event_btnApproveActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnApprove;
    private javax.swing.JButton btnback;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable tblTask;
    // End of variables declaration//GEN-END:variables

    public void populateTable() {

        System.out.println("pop");
        for (Task task : selectedEvent.getTaskDirectory().getAllTasks()) {
            DefaultTableModel model = (DefaultTableModel) tblTask.getModel();
            model.setRowCount(0);
            String tstatus = null;
            String estatus = null;

            Object row[] = new Object[7];
            if (task.isStatus() == false) {
                tstatus = "Pending";
            } else if (task.isStatus()) {
                tstatus = "Completed";
            }

            if (selectedEvent.getLive() == false) {
                estatus = "Pending";
            } else if (task.isStatus()) {
                estatus = "Completed";
            }

            row[0] = task.getAssignedby().getUsername();
            row[1] = task.getDescription();
            row[2] = task.getRole().getName();
            row[3] = task.getCost();
            row[4] = tstatus;
            row[5] = estatus;
            model.addRow(row);

        }

    }
}
